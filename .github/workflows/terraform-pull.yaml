name: "terraform s3-site: pull"

on:
  pull_request:
    branches:
      - main
    paths:
      - terraform/**

env:
  TF_LOG: INFO
  # in production better use an OIDC connection + pass `role-to-assume`
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  # for dns mgmt
  GODADDY_API_KEY: ${{ secrets.GODADDY_API_KEY }}
  GODADDY_API_SECRET: ${{ secrets.GODADDY_API_SECRET }}
  # override defaults there
  BACKEND_CONFIG: "s3-site.s3.tfbackend"
  VARS_FILE: "s3-site.tfvars"

jobs:
  terraform-check-pr:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    permissions:
      contents: read            # default, but need to mention for checkout to work
      pull-requests: write      # to add PR comments in "Report plan results"

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform init
        id: tf-init
        run: terraform init -backend-config="$BACKEND_CONFIG"

      - name: Terraform validate
        id: tf-validate
        run: terraform validate

      - name: Terraform plan
        id: tf-plan
        # mb: -detailed-exitcode: 0 ok/no diff, 1 error, 2 ok/diff present
        run: terraform plan -input=false -no-color -var-file="$VARS_FILE"
        # will fail it later; still does not produce output on error (stderr only)
        continue-on-error: true

      - name: Report plan results
        # inspired by https://spacelift.io/blog/github-actions-terraform
        # also: https://spacelift.io/blog/infrastructure-as-code-with-github-actions
        # - variation of the idea there is to replace a bottom comment if present
        # - also, run Checkov scan and include results in the report
        uses: actions/github-script@v6
        with:
          # output is markdown
          script: |
            const output = `
            ### terraform results
            | stage    | result |
            |----------|--------|
            | Init     | **${{ steps.tf-init.outcome }}**     |
            | Validate | **${{ steps.tf-validate.outcome }}** |
            | Plan     | **${{ steps.tf-plan.outcome }}**     |

            <details><summary>Plan details</summary>

            \`\`\`\n
            ${{ steps.tf-plan.outputs.stdout }}
            \`\`\`

            </details>
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Break on bad plan status
        if: steps.tf-plan.outcome == 'failure'
        run: exit 1
